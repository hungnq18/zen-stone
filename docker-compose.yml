version: '3.8'

services:
  webapp:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - DB_HOST=db
      - DB_NAME=swp_tech
      - DB_USER=sa
      - DB_PASSWORD=yourStrong(!)Password # <--- CHANGE THIS PASSWORD
    depends_on:
      - db-init
    networks:
      - app-network

  db:
    image: mcr.microsoft.com/mssql/server:2019-latest
    ports:
      - "1433:1433"
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: "yourStrong(!)Password" # <--- USE THE SAME PASSWORD HERE
    volumes:
      - mssql-data:/var/opt/mssql
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P 'yourStrong(!)Password' -Q 'SELECT 1' || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 10
      start_period: 10s
    networks:
      - app-network

  db-init:
    image: mcr.microsoft.com/mssql-tools
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./db:/scripts
    environment:
      SA_PASSWORD: "yourStrong(!)Password" # <--- USE THE SAME PASSWORD HERE
    command: >
      bash -c "
        /opt/mssql-tools/bin/sqlcmd -S db -U sa -P \"$$SA_PASSWORD\" -Q 'IF DB_ID(N\"swp_tech\") IS NULL CREATE DATABASE [swp_tech];' &&
        /opt/mssql-tools/bin/sqlcmd -S db -U sa -P \"$$SA_PASSWORD\" -d swp_tech -i /scripts/db.sql
      "
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mssql-data: 